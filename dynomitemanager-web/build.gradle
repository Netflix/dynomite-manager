apply plugin: 'war'
apply plugin: "org.akhikhl.gretty"
apply plugin: 'jacoco'


// Gretty allows us to run tomcat from the command line using the "tomcatRun" task.
if (!gradle.startParameter.taskRequests.isEmpty()) {
    Properties development_properties = new Properties()
    development_properties.load(new FileInputStream(file("src/main/resources/laptop.properties")))
    gretty {
        jacocoEnabled = false
        httpPort = development_properties.getProperty("netflix.appinfo.port", "8080").toInteger()
        contextPath = '/'
        servletContainer = 'tomcat8'
        systemProperties = development_properties
        scanDirs = ['**/src/main/resources/**']
        scanDependencies = true
        // More properties can be found here:
        // http://akhikhl.github.io/gretty-doc/Gretty-configuration.html
    }
    // Required exclusions to work around a bug in gretty: log4j-over-slf4j is accidentally included
    configurations.grettyRunnerTomcat7 {
        exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
    }
    configurations.grettyRunnerTomcat8 {
        exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
    }
}

dependencies {
    compile project(':dynomitemanager-common')
    compile project(':dynomitemanager-core')
   
    compile 'com.google.inject.extensions:guice-servlet:4.0'
    compile 'com.google.inject:guice:4.0'
    compile group: 'com.owlike', name: 'genson', version: '1.4'
    
    compile "com.netflix.runtime:health-guice:latest.release"    
   
    // Governator wires up all of our dependencies in dependency injection fashion.
    compile "com.netflix.governator:governator-core:latest.release"
    compile "com.netflix.governator:governator-servlet:latest.release"
    compile "com.netflix.governator:governator-jersey:latest.release"

    // This is here because it's the only reliable way to make IDEs pick up the proper dependencies when running
    // a main() function while also not packaging the dependencies to be deployed on EC2.
    if (gradle.startParameter.taskRequests.isEmpty()) {
        compile("com.netflix.governator:governator-jetty:latest.release") { transitive = false }
        compile "org.eclipse.jetty:jetty-servlet:latest.release"
        compile "org.eclipse.jetty:jetty-webapp:latest.release"
        compile "javax.servlet:javax.servlet-api:latest.release"
    } else {
        compileOnly("com.netflix.governator:governator-jetty:latest.release") { transitive = false }
        compileOnly "org.eclipse.jetty:jetty-servlet:latest.release"
        compileOnly "org.eclipse.jetty:jetty-webapp:latest.release"
        compileOnly "javax.servlet:javax.servlet-api:latest.release"
    }


}

war.archiveName = "dynomite-manager.war"
